// <auto-generated />
using FPTStore.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FPTStore.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231212143953_AddForeignKeyForProductCategoryRelationship")]
    partial class AddForeignKeyForProductCategoryRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FPTStore.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Action",
                            DisplayOrder = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "SciFi",
                            DisplayOrder = 2
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "History",
                            DisplayOrder = 3
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "IT",
                            DisplayOrder = 4
                        });
                });

            modelBuilder.Entity("FPTStore.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("ProductAuthor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            ISBN = "SWD9999001",
                            ListPrice = 99.0,
                            Price = 90.0,
                            Price100 = 80.0,
                            Price50 = 85.0,
                            ProductAuthor = "Billy Spark",
                            ProductDescription = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ProductTitle = "Fortune of Time"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            ISBN = "CAW777777701",
                            ListPrice = 40.0,
                            Price = 30.0,
                            Price100 = 20.0,
                            Price50 = 25.0,
                            ProductAuthor = "Nancy Hoover",
                            ProductDescription = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ProductTitle = "Dark Skies"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            ISBN = "RITO5555501",
                            ListPrice = 55.0,
                            Price = 50.0,
                            Price100 = 35.0,
                            Price50 = 40.0,
                            ProductAuthor = "Julian Button",
                            ProductDescription = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ProductTitle = "Vanish in the Sunset"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 3,
                            ISBN = "WS3333333301",
                            ListPrice = 70.0,
                            Price = 65.0,
                            Price100 = 55.0,
                            Price50 = 60.0,
                            ProductAuthor = "Abby Muscles",
                            ProductDescription = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ProductTitle = "Cotton Candy"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 2,
                            ISBN = "SOTJ1111111101",
                            ListPrice = 30.0,
                            Price = 27.0,
                            Price100 = 20.0,
                            Price50 = 25.0,
                            ProductAuthor = "Ron Parker",
                            ProductDescription = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ProductTitle = "Rock in the Ocean"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3,
                            ISBN = "FOT000000001",
                            ListPrice = 25.0,
                            Price = 23.0,
                            Price100 = 20.0,
                            Price50 = 22.0,
                            ProductAuthor = "Laura Phantom",
                            ProductDescription = "Praesent vitae sodales libero. Praesent molestie orci augue, vitae euismod velit sollicitudin ac. Praesent vestibulum facilisis nibh ut ultricies.\r\n\r\nNunc malesuada viverra ipsum sit amet tincidunt. ",
                            ProductTitle = "Leaves and Wonders"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 2,
                            ISBN = "EE999888801",
                            ListPrice = 60.0,
                            Price = 55.0,
                            Price100 = 45.0,
                            Price50 = 50.0,
                            ProductAuthor = "Lily Harmony",
                            ProductDescription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut diam nec ligula euismod consequat. In hac habitasse platea dictumst.",
                            ProductTitle = "Eternal Echoes"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 1,
                            ISBN = "WITW777777701",
                            ListPrice = 45.0,
                            Price = 40.0,
                            Price100 = 30.0,
                            Price50 = 35.0,
                            ProductAuthor = "Owen Zephyr",
                            ProductDescription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut diam nec ligula euismod consequat. In hac habitasse platea dictumst.",
                            ProductTitle = "Whispers in the Wind"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 2,
                            ISBN = "MM111122223301",
                            ListPrice = 75.0,
                            Price = 70.0,
                            Price100 = 60.0,
                            Price50 = 65.0,
                            ProductAuthor = "Aria Moon",
                            ProductDescription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut diam nec ligula euismod consequat. In hac habitasse platea dictumst.",
                            ProductTitle = "Mystical Meadows"
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 1,
                            ISBN = "SSSS888888801",
                            ListPrice = 35.0,
                            Price = 32.0,
                            Price100 = 28.0,
                            Price50 = 30.0,
                            ProductAuthor = "Ethan Sunshine",
                            ProductDescription = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut diam nec ligula euismod consequat. In hac habitasse platea dictumst.",
                            ProductTitle = "Sunset Serenity"
                        },
                        new
                        {
                            ProductId = 11,
                            CategoryId = 4,
                            ISBN = "ITA111122223301",
                            ListPrice = 90.0,
                            Price = 85.0,
                            Price100 = 75.0,
                            Price50 = 80.0,
                            ProductAuthor = "Thomas H. Cormen",
                            ProductDescription = "A comprehensive introduction to algorithms and data structures.",
                            ProductTitle = "Introduction to Algorithms"
                        },
                        new
                        {
                            ProductId = 12,
                            CategoryId = 4,
                            ISBN = "CCASH777777701",
                            ListPrice = 55.0,
                            Price = 50.0,
                            Price100 = 40.0,
                            Price50 = 45.0,
                            ProductAuthor = "Robert C. Martin",
                            ProductDescription = "Guidelines for writing clean, maintainable, and efficient code.",
                            ProductTitle = "Clean Code: A Handbook of Agile Software Craftsmanship"
                        },
                        new
                        {
                            ProductId = 13,
                            CategoryId = 4,
                            ISBN = "PRAGMA3333333301",
                            ListPrice = 70.0,
                            Price = 65.0,
                            Price100 = 55.0,
                            Price50 = 60.0,
                            ProductAuthor = "David Thomas, Andrew Hunt",
                            ProductDescription = "Practical advice on software development and becoming an effective programmer.",
                            ProductTitle = "The Pragmatic Programmer: Your Journey to Mastery"
                        },
                        new
                        {
                            ProductId = 14,
                            CategoryId = 4,
                            ISBN = "DPATTERN1111111101",
                            ListPrice = 40.0,
                            Price = 35.0,
                            Price100 = 25.0,
                            Price50 = 30.0,
                            ProductAuthor = "Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides",
                            ProductDescription = "Classic book on object-oriented design patterns.",
                            ProductTitle = "Design Patterns: Elements of Reusable Object-Oriented Software"
                        });
                });

            modelBuilder.Entity("FPTStore.Models.Product", b =>
                {
                    b.HasOne("FPTStore.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
